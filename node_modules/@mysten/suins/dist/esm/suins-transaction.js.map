{
  "version": 3,
  "sources": ["../../src/suins-transaction.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bcs } from '@mysten/sui/bcs';\nimport type {\n\tTransaction,\n\tTransactionObjectArgument,\n\tTransactionObjectInput,\n} from '@mysten/sui/transactions';\nimport { isValidSuiNSName, normalizeSuiNSName, SUI_CLOCK_OBJECT_ID } from '@mysten/sui/utils';\n\nimport { ALLOWED_METADATA, MAX_U64 } from './constants.js';\nimport { isNestedSubName, isSubName, zeroCoin } from './helpers.js';\nimport type { SuinsClient } from './suins-client.js';\nimport type { DiscountInfo, ReceiptParams, RegistrationParams, RenewalParams } from './types.js';\n\nexport class SuinsTransaction {\n\tsuinsClient: SuinsClient;\n\ttransaction: Transaction;\n\n\tconstructor(client: SuinsClient, transaction: Transaction) {\n\t\tthis.suinsClient = client;\n\t\tthis.transaction = transaction;\n\t}\n\n\t/**\n\t * Registers a domain for a number of years.\n\t */\n\tregister(params: RegistrationParams): TransactionObjectArgument {\n\t\tif (params.couponCode && params.discountInfo) {\n\t\t\tthrow new Error('Cannot apply both coupon and discount NFT');\n\t\t}\n\n\t\tconst paymentIntent = this.initRegistration(params.domain);\n\t\tif (params.couponCode) {\n\t\t\tthis.applyCoupon(paymentIntent, params.couponCode);\n\t\t}\n\t\tif (params.discountInfo) {\n\t\t\tthis.applyDiscount(paymentIntent, params.discountInfo);\n\t\t}\n\t\tconst priceAfterDiscount = this.calculatePriceAfterDiscount(\n\t\t\tpaymentIntent,\n\t\t\tparams.coinConfig.type,\n\t\t);\n\t\tconst receipt = this.generateReceipt({\n\t\t\tpaymentIntent,\n\t\t\tpriceAfterDiscount,\n\t\t\tcoinConfig: params.coinConfig,\n\t\t\tcoin: params.coin,\n\t\t\tmaxAmount: params.maxAmount,\n\t\t\tpriceInfoObjectId: params.priceInfoObjectId,\n\t\t});\n\t\tconst nft = this.finalizeRegister(receipt);\n\n\t\tif (params.years > 1) {\n\t\t\tthis.renew({\n\t\t\t\tnft,\n\t\t\t\tyears: params.years - 1,\n\t\t\t\tcoinConfig: params.coinConfig,\n\t\t\t\tcoin: params.coin,\n\t\t\t\tcouponCode: params.couponCode,\n\t\t\t\tdiscountInfo: params.discountInfo,\n\t\t\t\tmaxAmount: params.maxAmount,\n\t\t\t\tpriceInfoObjectId: params.priceInfoObjectId,\n\t\t\t});\n\t\t}\n\n\t\treturn nft as TransactionObjectArgument;\n\t}\n\n\t/**\n\t * Renews an NFT for a number of years.\n\t */\n\trenew(params: RenewalParams): void {\n\t\tif (params.couponCode && params.discountInfo) {\n\t\t\tthrow new Error('Cannot apply both coupon and discount NFT');\n\t\t}\n\n\t\tconst paymentIntent = this.initRenewal(params.nft, params.years);\n\t\tif (params.couponCode) {\n\t\t\tthis.applyCoupon(paymentIntent, params.couponCode);\n\t\t}\n\t\tif (params.discountInfo) {\n\t\t\tthis.applyDiscount(paymentIntent, params.discountInfo);\n\t\t}\n\t\tconst priceAfterDiscount = this.calculatePriceAfterDiscount(\n\t\t\tpaymentIntent,\n\t\t\tparams.coinConfig.type,\n\t\t);\n\t\tconst receipt = this.generateReceipt({\n\t\t\tpaymentIntent,\n\t\t\tpriceAfterDiscount,\n\t\t\tcoinConfig: params.coinConfig,\n\t\t\tcoin: params.coin,\n\t\t\tmaxAmount: params.maxAmount,\n\t\t\tpriceInfoObjectId: params.priceInfoObjectId,\n\t\t});\n\t\tthis.finalizeRenew(receipt, params.nft);\n\t}\n\n\tinitRegistration(domain: string): TransactionObjectArgument {\n\t\tconst config = this.suinsClient.config;\n\t\treturn this.transaction.moveCall({\n\t\t\ttarget: `${config.packageId}::payment::init_registration`,\n\t\t\targuments: [this.transaction.object(config.suins), this.transaction.pure.string(domain)],\n\t\t});\n\t}\n\n\tinitRenewal(nft: TransactionObjectInput, years: number): TransactionObjectArgument {\n\t\tconst config = this.suinsClient.config;\n\t\treturn this.transaction.moveCall({\n\t\t\ttarget: `${config.packageId}::payment::init_renewal`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(config.suins),\n\t\t\t\tthis.transaction.object(nft),\n\t\t\t\tthis.transaction.pure.u8(years),\n\t\t\t],\n\t\t});\n\t}\n\n\tcalculatePrice(\n\t\tbaseAmount: TransactionObjectArgument,\n\t\tpaymentType: string,\n\t\tpriceInfoObjectId: string,\n\t): TransactionObjectArgument {\n\t\tconst config = this.suinsClient.config;\n\t\treturn this.transaction.moveCall({\n\t\t\ttarget: `${config.payments.packageId}::payments::calculate_price`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(config.suins),\n\t\t\t\tbaseAmount,\n\t\t\t\tthis.transaction.object.clock(),\n\t\t\t\tthis.transaction.object(priceInfoObjectId),\n\t\t\t],\n\t\t\ttypeArguments: [paymentType],\n\t\t});\n\t}\n\n\thandleBasePayment(\n\t\tpaymentIntent: TransactionObjectArgument,\n\t\tpayment: TransactionObjectArgument,\n\t\tpaymentType: string,\n\t): TransactionObjectArgument {\n\t\tconst config = this.suinsClient.config;\n\t\treturn this.transaction.moveCall({\n\t\t\ttarget: `${config.payments.packageId}::payments::handle_base_payment`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(config.suins),\n\t\t\t\tthis.transaction.object(config.bbb.vault),\n\t\t\t\tpaymentIntent,\n\t\t\t\tpayment,\n\t\t\t],\n\t\t\ttypeArguments: [paymentType],\n\t\t});\n\t}\n\n\thandlePayment(\n\t\tpaymentIntent: TransactionObjectArgument,\n\t\tpayment: TransactionObjectArgument,\n\t\tpaymentType: string,\n\t\tpriceInfoObjectId: string,\n\t\tmaxAmount: bigint = MAX_U64,\n\t): TransactionObjectArgument {\n\t\tconst config = this.suinsClient.config;\n\t\treturn this.transaction.moveCall({\n\t\t\ttarget: `${config.payments.packageId}::payments::handle_payment`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(config.suins),\n\t\t\t\tthis.transaction.object(config.bbb.vault),\n\t\t\t\tpaymentIntent,\n\t\t\t\tpayment,\n\t\t\t\tthis.transaction.object.clock(),\n\t\t\t\tthis.transaction.object(priceInfoObjectId),\n\t\t\t\tthis.transaction.pure.u64(maxAmount),\n\t\t\t],\n\t\t\ttypeArguments: [paymentType],\n\t\t});\n\t}\n\n\tfinalizeRegister(receipt: TransactionObjectArgument): TransactionObjectArgument {\n\t\tconst config = this.suinsClient.config;\n\t\treturn this.transaction.moveCall({\n\t\t\ttarget: `${config.packageId}::payment::register`,\n\t\t\targuments: [receipt, this.transaction.object(config.suins), this.transaction.object.clock()],\n\t\t});\n\t}\n\n\tfinalizeRenew(\n\t\treceipt: TransactionObjectArgument,\n\t\tnft: TransactionObjectInput,\n\t): TransactionObjectArgument {\n\t\tconst config = this.suinsClient.config;\n\t\treturn this.transaction.moveCall({\n\t\t\ttarget: `${config.packageId}::payment::renew`,\n\t\t\targuments: [\n\t\t\t\treceipt,\n\t\t\t\tthis.transaction.object(config.suins),\n\t\t\t\tthis.transaction.object(nft),\n\t\t\t\tthis.transaction.object.clock(),\n\t\t\t],\n\t\t});\n\t}\n\n\tcalculatePriceAfterDiscount(\n\t\tpaymentIntent: TransactionObjectArgument,\n\t\tpaymentType: string,\n\t): TransactionObjectArgument {\n\t\tconst config = this.suinsClient.config;\n\t\treturn this.transaction.moveCall({\n\t\t\ttarget: `${config.payments.packageId}::payments::calculate_price_after_discount`,\n\t\t\targuments: [this.transaction.object(config.suins), paymentIntent],\n\t\t\ttypeArguments: [paymentType],\n\t\t});\n\t}\n\n\tgenerateReceipt(params: ReceiptParams): TransactionObjectArgument {\n\t\tconst baseAssetPurchase = params.coinConfig.feed === '';\n\t\tif (baseAssetPurchase) {\n\t\t\tconst payment = params.coin\n\t\t\t\t? this.transaction.splitCoins(this.transaction.object(params.coin), [\n\t\t\t\t\t\tparams.priceAfterDiscount,\n\t\t\t\t\t])\n\t\t\t\t: zeroCoin(this.transaction, params.coinConfig.type);\n\t\t\tconst receipt = this.handleBasePayment(params.paymentIntent, payment, params.coinConfig.type);\n\t\t\treturn receipt;\n\t\t} else {\n\t\t\tconst priceInfoObjectId = params.priceInfoObjectId;\n\t\t\tif (!priceInfoObjectId)\n\t\t\t\tthrow new Error('Price info object ID is required for non-base asset purchases');\n\t\t\tconst price = this.calculatePrice(\n\t\t\t\tparams.priceAfterDiscount,\n\t\t\t\tparams.coinConfig.type,\n\t\t\t\tpriceInfoObjectId,\n\t\t\t);\n\t\t\tif (!params.coin) throw new Error('coin input is required');\n\t\t\tconst payment = this.transaction.splitCoins(this.transaction.object(params.coin!), [price]);\n\t\t\tconst receipt = this.handlePayment(\n\t\t\t\tparams.paymentIntent,\n\t\t\t\tpayment,\n\t\t\t\tparams.coinConfig.type,\n\t\t\t\tpriceInfoObjectId,\n\t\t\t\tparams.maxAmount,\n\t\t\t);\n\t\t\treturn receipt;\n\t\t}\n\t}\n\n\t/**\n\t * Applies a coupon to the payment intent.\n\t */\n\tapplyCoupon(intent: TransactionObjectArgument, couponCode: string): TransactionObjectArgument {\n\t\tconst config = this.suinsClient.config;\n\t\treturn this.transaction.moveCall({\n\t\t\ttarget: `${config.coupons.packageId}::coupon_house::apply_coupon`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(config.suins),\n\t\t\t\tintent,\n\t\t\t\tthis.transaction.pure.string(couponCode),\n\t\t\t\tthis.transaction.object.clock(),\n\t\t\t],\n\t\t});\n\t}\n\n\t/**\n\t * Applies a discount to the payment intent.\n\t */\n\tapplyDiscount(intent: TransactionObjectArgument, discountInfo: DiscountInfo): void {\n\t\tconst config = this.suinsClient.config;\n\n\t\tif (discountInfo.isFreeClaim) {\n\t\t\tthis.transaction.moveCall({\n\t\t\t\ttarget: `${config.discountsPackage.packageId}::free_claims::free_claim`,\n\t\t\t\targuments: [\n\t\t\t\t\tthis.transaction.object(config.discountsPackage.discountHouseId),\n\t\t\t\t\tthis.transaction.object(config.suins),\n\t\t\t\t\tintent,\n\t\t\t\t\tthis.transaction.object(discountInfo.discountNft),\n\t\t\t\t],\n\t\t\t\ttypeArguments: [discountInfo.type],\n\t\t\t});\n\t\t} else {\n\t\t\tthis.transaction.moveCall({\n\t\t\t\ttarget: `${config.discountsPackage.packageId}::discounts::apply_percentage_discount`,\n\t\t\t\targuments: [\n\t\t\t\t\tthis.transaction.object(config.discountsPackage.discountHouseId),\n\t\t\t\t\tintent,\n\t\t\t\t\tthis.transaction.object(config.suins),\n\t\t\t\t\tthis.transaction.object(discountInfo.discountNft),\n\t\t\t\t],\n\t\t\t\ttypeArguments: [discountInfo.type],\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Creates a subdomain.\n\t */\n\tcreateSubName({\n\t\tparentNft,\n\t\tname,\n\t\texpirationTimestampMs,\n\t\tallowChildCreation,\n\t\tallowTimeExtension,\n\t}: {\n\t\tparentNft: TransactionObjectInput;\n\t\tname: string;\n\t\texpirationTimestampMs: number;\n\t\tallowChildCreation: boolean;\n\t\tallowTimeExtension: boolean;\n\t}) {\n\t\tif (!isValidSuiNSName(name)) throw new Error('Invalid SuiNS name');\n\t\tconst isParentSubdomain = isNestedSubName(name);\n\t\tif (!this.suinsClient.config.suins) throw new Error('SuiNS Object ID not found');\n\t\tif (!this.suinsClient.config.subNamesPackageId)\n\t\t\tthrow new Error('Subnames package ID not found');\n\t\tif (isParentSubdomain && !this.suinsClient.config.tempSubdomainsProxyPackageId)\n\t\t\tthrow new Error('Subnames proxy package ID not found');\n\n\t\tconst subNft = this.transaction.moveCall({\n\t\t\ttarget: isParentSubdomain\n\t\t\t\t? `${this.suinsClient.config.tempSubdomainsProxyPackageId}::subdomain_proxy::new`\n\t\t\t\t: `${this.suinsClient.config.subNamesPackageId}::subdomains::new`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(this.suinsClient.config.suins),\n\t\t\t\tthis.transaction.object(parentNft),\n\t\t\t\tthis.transaction.object(SUI_CLOCK_OBJECT_ID),\n\t\t\t\tthis.transaction.pure.string(normalizeSuiNSName(name, 'dot')),\n\t\t\t\tthis.transaction.pure.u64(expirationTimestampMs),\n\t\t\t\tthis.transaction.pure.bool(!!allowChildCreation),\n\t\t\t\tthis.transaction.pure.bool(!!allowTimeExtension),\n\t\t\t],\n\t\t});\n\n\t\treturn subNft;\n\t}\n\n\t/**\n\t * Builds the PTB to create a leaf subdomain.\n\t * Parent can be a `SuinsRegistration` or a `SubDomainRegistration` object.\n\t * Can be passed in as an ID or a TransactionArgument.\n\t */\n\tcreateLeafSubName({\n\t\tparentNft,\n\t\tname,\n\t\ttargetAddress,\n\t}: {\n\t\tparentNft: TransactionObjectInput;\n\t\tname: string;\n\t\ttargetAddress: string;\n\t}) {\n\t\tif (!isValidSuiNSName(name)) throw new Error('Invalid SuiNS name');\n\t\tconst isParentSubdomain = isNestedSubName(name);\n\t\tif (!this.suinsClient.config.suins) throw new Error('SuiNS Object ID not found');\n\t\tif (!this.suinsClient.config.subNamesPackageId)\n\t\t\tthrow new Error('Subnames package ID not found');\n\t\tif (isParentSubdomain && !this.suinsClient.config.tempSubdomainsProxyPackageId)\n\t\t\tthrow new Error('Subnames proxy package ID not found');\n\n\t\tthis.transaction.moveCall({\n\t\t\ttarget: isParentSubdomain\n\t\t\t\t? `${this.suinsClient.config.tempSubdomainsProxyPackageId}::subdomain_proxy::new_leaf`\n\t\t\t\t: `${this.suinsClient.config.subNamesPackageId}::subdomains::new_leaf`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(this.suinsClient.config.suins),\n\t\t\t\tthis.transaction.object(parentNft),\n\t\t\t\tthis.transaction.object(SUI_CLOCK_OBJECT_ID),\n\t\t\t\tthis.transaction.pure.string(normalizeSuiNSName(name, 'dot')),\n\t\t\t\tthis.transaction.pure.address(targetAddress),\n\t\t\t],\n\t\t});\n\t}\n\n\t/**\n\t * Removes a leaf subname.\n\t */\n\tremoveLeafSubName({ parentNft, name }: { parentNft: TransactionObjectInput; name: string }) {\n\t\tif (!isValidSuiNSName(name)) throw new Error('Invalid SuiNS name');\n\t\tconst isParentSubdomain = isNestedSubName(name);\n\t\tif (!isSubName(name)) throw new Error('This can only be invoked for subnames');\n\t\tif (!this.suinsClient.config.suins) throw new Error('SuiNS Object ID not found');\n\t\tif (!this.suinsClient.config.subNamesPackageId)\n\t\t\tthrow new Error('Subnames package ID not found');\n\t\tif (isParentSubdomain && !this.suinsClient.config.tempSubdomainsProxyPackageId)\n\t\t\tthrow new Error('Subnames proxy package ID not found');\n\n\t\tthis.transaction.moveCall({\n\t\t\ttarget: isParentSubdomain\n\t\t\t\t? `${this.suinsClient.config.tempSubdomainsProxyPackageId}::subdomain_proxy::remove_leaf`\n\t\t\t\t: `${this.suinsClient.config.subNamesPackageId}::subdomains::remove_leaf`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(this.suinsClient.config.suins),\n\t\t\t\tthis.transaction.object(parentNft),\n\t\t\t\tthis.transaction.object(SUI_CLOCK_OBJECT_ID),\n\t\t\t\tthis.transaction.pure.string(normalizeSuiNSName(name, 'dot')),\n\t\t\t],\n\t\t});\n\t}\n\n\t/**\n\t * Sets the target address of an NFT.\n\t */\n\tsetTargetAddress({\n\t\tnft, // Can be string or argument\n\t\taddress,\n\t\tisSubname,\n\t}: {\n\t\tnft: TransactionObjectInput;\n\t\taddress?: string;\n\t\tisSubname?: boolean;\n\t}) {\n\t\tif (isSubname && !this.suinsClient.config.tempSubdomainsProxyPackageId)\n\t\t\tthrow new Error('Subnames proxy package ID not found');\n\n\t\tthis.transaction.moveCall({\n\t\t\ttarget: isSubname\n\t\t\t\t? `${this.suinsClient.config.tempSubdomainsProxyPackageId}::subdomain_proxy::set_target_address`\n\t\t\t\t: `${this.suinsClient.config.packageId}::controller::set_target_address`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(this.suinsClient.config.suins),\n\t\t\t\tthis.transaction.object(nft),\n\t\t\t\tthis.transaction.pure(bcs.option(bcs.Address).serialize(address).toBytes()),\n\t\t\t\tthis.transaction.object(SUI_CLOCK_OBJECT_ID),\n\t\t\t],\n\t\t});\n\t}\n\n\t/**\n\t * Sets a default name for the user.\n\t */\n\tsetDefault(name: string) {\n\t\tif (!isValidSuiNSName(name)) throw new Error('Invalid SuiNS name');\n\t\tif (!this.suinsClient.config.suins) throw new Error('SuiNS Object ID not found');\n\n\t\tthis.transaction.moveCall({\n\t\t\ttarget: `${this.suinsClient.config.packageId}::controller::set_reverse_lookup`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(this.suinsClient.config.suins),\n\t\t\t\tthis.transaction.pure.string(normalizeSuiNSName(name, 'dot')),\n\t\t\t],\n\t\t});\n\t}\n\n\t/**\n\t * Edits the setup of a subname.\n\t */\n\teditSetup({\n\t\tparentNft,\n\t\tname,\n\t\tallowChildCreation,\n\t\tallowTimeExtension,\n\t}: {\n\t\tparentNft: TransactionObjectInput;\n\t\tname: string;\n\t\tallowChildCreation: boolean;\n\t\tallowTimeExtension: boolean;\n\t}) {\n\t\tif (!isValidSuiNSName(name)) throw new Error('Invalid SuiNS name');\n\t\tconst isParentSubdomain = isNestedSubName(name);\n\t\tif (!this.suinsClient.config.suins) throw new Error('SuiNS Object ID not found');\n\t\tif (!isParentSubdomain && !this.suinsClient.config.subNamesPackageId)\n\t\t\tthrow new Error('Subnames package ID not found');\n\t\tif (isParentSubdomain && !this.suinsClient.config.tempSubdomainsProxyPackageId)\n\t\t\tthrow new Error('Subnames proxy package ID not found');\n\n\t\tthis.transaction.moveCall({\n\t\t\ttarget: isParentSubdomain\n\t\t\t\t? `${this.suinsClient.config.tempSubdomainsProxyPackageId}::subdomain_proxy::edit_setup`\n\t\t\t\t: `${this.suinsClient.config.subNamesPackageId}::subdomains::edit_setup`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(this.suinsClient.config.suins),\n\t\t\t\tthis.transaction.object(parentNft),\n\t\t\t\tthis.transaction.object(SUI_CLOCK_OBJECT_ID),\n\t\t\t\tthis.transaction.pure.string(normalizeSuiNSName(name, 'dot')),\n\t\t\t\tthis.transaction.pure.bool(!!allowChildCreation),\n\t\t\t\tthis.transaction.pure.bool(!!allowTimeExtension),\n\t\t\t],\n\t\t});\n\t}\n\n\t/**\n\t * Extends the expiration of a subname.\n\t */\n\textendExpiration({\n\t\tnft,\n\t\texpirationTimestampMs,\n\t}: {\n\t\tnft: TransactionObjectInput;\n\t\texpirationTimestampMs: number;\n\t}) {\n\t\tif (!this.suinsClient.config.suins) throw new Error('SuiNS Object ID not found');\n\t\tif (!this.suinsClient.config.subNamesPackageId)\n\t\t\tthrow new Error('Subnames package ID not found');\n\n\t\tthis.transaction.moveCall({\n\t\t\ttarget: `${this.suinsClient.config.subNamesPackageId}::subdomains::extend_expiration`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(this.suinsClient.config.suins),\n\t\t\t\tthis.transaction.object(nft),\n\t\t\t\tthis.transaction.pure.u64(expirationTimestampMs),\n\t\t\t],\n\t\t});\n\t}\n\n\t/**\n\t * Sets the user data of an NFT.\n\t */\n\tsetUserData({\n\t\tnft,\n\t\tvalue,\n\t\tkey,\n\t\tisSubname,\n\t}: {\n\t\tnft: TransactionObjectInput;\n\t\tvalue: string;\n\t\tkey: string;\n\t\tisSubname?: boolean;\n\t}) {\n\t\tif (!this.suinsClient.config.suins) throw new Error('SuiNS Object ID not found');\n\t\tif (isSubname && !this.suinsClient.config.tempSubdomainsProxyPackageId)\n\t\t\tthrow new Error('Subnames proxy package ID not found');\n\n\t\tif (!Object.values(ALLOWED_METADATA).some((x) => x === key)) throw new Error('Invalid key');\n\n\t\tthis.transaction.moveCall({\n\t\t\ttarget: isSubname\n\t\t\t\t? `${this.suinsClient.config.tempSubdomainsProxyPackageId}::subdomain_proxy::set_user_data`\n\t\t\t\t: `${this.suinsClient.config.packageId}::controller::set_user_data`,\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(this.suinsClient.config.suins),\n\t\t\t\tthis.transaction.object(nft),\n\t\t\t\tthis.transaction.pure.string(key),\n\t\t\t\tthis.transaction.pure.string(value),\n\t\t\t\tthis.transaction.object(SUI_CLOCK_OBJECT_ID),\n\t\t\t],\n\t\t});\n\t}\n\n\t/**\n\t * Burns an expired NFT to collect storage rebates.\n\t */\n\tburnExpired({ nft, isSubname }: { nft: TransactionObjectInput; isSubname?: boolean }) {\n\t\tif (!this.suinsClient.config.suins) throw new Error('SuiNS Object ID not found');\n\n\t\tthis.transaction.moveCall({\n\t\t\ttarget: `${this.suinsClient.config.packageId}::controller::${\n\t\t\t\tisSubname ? 'burn_expired_subname' : 'burn_expired'\n\t\t\t}`, // Update this\n\t\t\targuments: [\n\t\t\t\tthis.transaction.object(this.suinsClient.config.suins),\n\t\t\t\tthis.transaction.object(nft),\n\t\t\t\tthis.transaction.object(SUI_CLOCK_OBJECT_ID),\n\t\t\t],\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
